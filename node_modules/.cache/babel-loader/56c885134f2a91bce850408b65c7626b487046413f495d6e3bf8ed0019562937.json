{"ast":null,"code":"const BASE_URL = \"https://psw-server.onrender.com/\";\nconst PUBLIC_ID = 1;\nconst PRIVATE_ID = \"nkimro\";\nexport function GetHeroes() {\n  return fetch(BASE_URL + \"Users/\" + PUBLIC_ID, {\n    method: \"GET\",\n    headers: {\n      Accept: \"application/json\",\n      \"Content-Type\": \"application/json\"\n    }\n  }).then(response => {\n    if (response.status !== 200) {\n      return [];\n    }\n    return response.json();\n  });\n}\n_c = GetHeroes;\nexport function GetFavorites() {\n  return fetch(BASE_URL + \"Users/\" + PUBLIC_ID + \"/top\", {\n    method: \"GET\",\n    headers: {\n      Accept: \"application/json\",\n      \"Content-Type\": \"application/json\"\n    }\n  }).then(response => {\n    if (response.status !== 200) {\n      return [];\n    }\n    return response.json();\n  });\n}\n_c2 = GetFavorites;\nexport function UpdateHero(list) {\n  return fetch(BASE_URL + \"Users/\" + PRIVATE_ID, {\n    method: \"POST\",\n    headers: {\n      Accept: \"application/json\",\n      \"Content-Type\": \"application/json\"\n    },\n    body: JSON.stringify(list)\n  }).then(response => {\n    if (response.status !== 200) {\n      return [];\n    }\n    return response.json();\n  });\n}\n_c3 = UpdateHero;\nexport function UpdateFavorites(list) {\n  return fetch(BASE_URL + \"Users/\" + PRIVATE_ID + \"/top\", {\n    method: \"POST\",\n    headers: {\n      Accept: \"application/json\",\n      \"Content-Type\": \"application/json\"\n    },\n    body: JSON.stringify(list)\n  }).then(response => {\n    if (response.status !== 200) {\n      return [];\n    }\n    return response.json();\n  });\n}\n_c4 = UpdateFavorites;\nvar _c, _c2, _c3, _c4;\n$RefreshReg$(_c, \"GetHeroes\");\n$RefreshReg$(_c2, \"GetFavorites\");\n$RefreshReg$(_c3, \"UpdateHero\");\n$RefreshReg$(_c4, \"UpdateFavorites\");","map":{"version":3,"names":["BASE_URL","PUBLIC_ID","PRIVATE_ID","GetHeroes","fetch","method","headers","Accept","then","response","status","json","GetFavorites","UpdateHero","list","body","JSON","stringify","UpdateFavorites"],"sources":["C:/Users/robras/Desktop/leagueofheroes/src/shared/api.js"],"sourcesContent":["const BASE_URL = \"https://psw-server.onrender.com/\";\r\nconst PUBLIC_ID = 1\r\nconst PRIVATE_ID = \"nkimro\";\r\n\r\nexport function GetHeroes(){\r\n     return fetch(BASE_URL + \"Users/\" + PUBLIC_ID, {\r\n    method: \"GET\",\r\n    headers: {\r\n      Accept: \"application/json\",\r\n      \"Content-Type\": \"application/json\",\r\n    },\r\n  }).then((response) => {\r\n    if (response.status !== 200) {\r\n      return [];\r\n    }\r\n    return response.json();\r\n  });\r\n}\r\n\r\nexport function GetFavorites() {\r\n  return fetch(BASE_URL + \"Users/\" + PUBLIC_ID + \"/top\", {\r\n    method: \"GET\",\r\n    headers: {\r\n      Accept: \"application/json\",\r\n      \"Content-Type\": \"application/json\",\r\n    },\r\n  }).then((response) => {\r\n    if (response.status !== 200) {\r\n      return [];\r\n    }\r\n    return response.json();\r\n  });\r\n}\r\n\r\nexport function UpdateHero(list) {\r\n  return fetch(BASE_URL + \"Users/\" + PRIVATE_ID, {\r\n    method: \"POST\",\r\n    headers: {\r\n      Accept: \"application/json\",\r\n      \"Content-Type\": \"application/json\",\r\n    },\r\n    body: JSON.stringify(list),\r\n  }).then((response) => {\r\n    if (response.status !== 200) {\r\n      return [];\r\n    }\r\n    return response.json();\r\n  });\r\n}\r\n\r\nexport function UpdateFavorites(list) {\r\n  return fetch(BASE_URL + \"Users/\" + PRIVATE_ID + \"/top\", {\r\n    method: \"POST\",\r\n    headers: {\r\n      Accept: \"application/json\",\r\n      \"Content-Type\": \"application/json\",\r\n    },\r\n    body: JSON.stringify(list),\r\n  }).then((response) => {\r\n    if (response.status !== 200) {\r\n      return [];\r\n    }\r\n    return response.json();\r\n  });\r\n}\r\n"],"mappings":"AAAA,MAAMA,QAAQ,GAAG,kCAAkC;AACnD,MAAMC,SAAS,GAAG,CAAC;AACnB,MAAMC,UAAU,GAAG,QAAQ;AAE3B,OAAO,SAASC,SAAS,GAAE;EACtB,OAAOC,KAAK,CAACJ,QAAQ,GAAG,QAAQ,GAAGC,SAAS,EAAE;IAC/CI,MAAM,EAAE,KAAK;IACbC,OAAO,EAAE;MACPC,MAAM,EAAE,kBAAkB;MAC1B,cAAc,EAAE;IAClB;EACF,CAAC,CAAC,CAACC,IAAI,CAAEC,QAAQ,IAAK;IACpB,IAAIA,QAAQ,CAACC,MAAM,KAAK,GAAG,EAAE;MAC3B,OAAO,EAAE;IACX;IACA,OAAOD,QAAQ,CAACE,IAAI,EAAE;EACxB,CAAC,CAAC;AACJ;AAAC,KAbeR,SAAS;AAezB,OAAO,SAASS,YAAY,GAAG;EAC7B,OAAOR,KAAK,CAACJ,QAAQ,GAAG,QAAQ,GAAGC,SAAS,GAAG,MAAM,EAAE;IACrDI,MAAM,EAAE,KAAK;IACbC,OAAO,EAAE;MACPC,MAAM,EAAE,kBAAkB;MAC1B,cAAc,EAAE;IAClB;EACF,CAAC,CAAC,CAACC,IAAI,CAAEC,QAAQ,IAAK;IACpB,IAAIA,QAAQ,CAACC,MAAM,KAAK,GAAG,EAAE;MAC3B,OAAO,EAAE;IACX;IACA,OAAOD,QAAQ,CAACE,IAAI,EAAE;EACxB,CAAC,CAAC;AACJ;AAAC,MAbeC,YAAY;AAe5B,OAAO,SAASC,UAAU,CAACC,IAAI,EAAE;EAC/B,OAAOV,KAAK,CAACJ,QAAQ,GAAG,QAAQ,GAAGE,UAAU,EAAE;IAC7CG,MAAM,EAAE,MAAM;IACdC,OAAO,EAAE;MACPC,MAAM,EAAE,kBAAkB;MAC1B,cAAc,EAAE;IAClB,CAAC;IACDQ,IAAI,EAAEC,IAAI,CAACC,SAAS,CAACH,IAAI;EAC3B,CAAC,CAAC,CAACN,IAAI,CAAEC,QAAQ,IAAK;IACpB,IAAIA,QAAQ,CAACC,MAAM,KAAK,GAAG,EAAE;MAC3B,OAAO,EAAE;IACX;IACA,OAAOD,QAAQ,CAACE,IAAI,EAAE;EACxB,CAAC,CAAC;AACJ;AAAC,MAdeE,UAAU;AAgB1B,OAAO,SAASK,eAAe,CAACJ,IAAI,EAAE;EACpC,OAAOV,KAAK,CAACJ,QAAQ,GAAG,QAAQ,GAAGE,UAAU,GAAG,MAAM,EAAE;IACtDG,MAAM,EAAE,MAAM;IACdC,OAAO,EAAE;MACPC,MAAM,EAAE,kBAAkB;MAC1B,cAAc,EAAE;IAClB,CAAC;IACDQ,IAAI,EAAEC,IAAI,CAACC,SAAS,CAACH,IAAI;EAC3B,CAAC,CAAC,CAACN,IAAI,CAAEC,QAAQ,IAAK;IACpB,IAAIA,QAAQ,CAACC,MAAM,KAAK,GAAG,EAAE;MAC3B,OAAO,EAAE;IACX;IACA,OAAOD,QAAQ,CAACE,IAAI,EAAE;EACxB,CAAC,CAAC;AACJ;AAAC,MAdeO,eAAe;AAAA;AAAA;AAAA;AAAA;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}